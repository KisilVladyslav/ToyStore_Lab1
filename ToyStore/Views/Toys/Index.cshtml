@model ToyStore.Model.MainPageModel // Replace with actual namespace

@{
    ViewData["Title"] = "Toys Catalog";
}

<div class="container">
    <h2>@ViewData["Title"]</h2>

    <div class="mb-3">
        <a asp-controller="Toys" asp-action="Create" class="btn btn-primary">Create New Toy</a>
    </div>


    <form method="get" class="mb-3">
        <div class="input-group">
            <input type="text" name="SearchTerm" class="form-control" placeholder="Search by name..." value="@Model.SearchTerm" />
            <div class="input-group-append">
                <button type="submit" class="btn btn-outline-secondary">Search</button>
            </div>
        </div>
        <div class="form-group mt-2">
            <label for="SortOrder">Sort By:</label>
            <select class="form-control" name="SortOrder" id="SortOrder" asp-for="SortOrder">
                <option value="NameAsc">Name Ascending</option>
                <option value="NameDesc">Name Descending</option>
                <option value="PriceAsc">Price Ascending</option>
                <option value="PriceDesc">Price Descending</option>
            </select>
        </div>
    </form>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Category</th>
                <th>Price</th>
                <th>Available</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var toy in Model.Toys)
            {
                <tr>
                    <td>@toy.Name</td>
                    <td>@toy.Category?.Name</td>
                    <td>@toy.Price</td>
                    <td>
                        @if (toy.IsAvailable)
                        {
                            <span class="badge badge-success">Yes</span>
                        }
                        else
                        {
                            <span class="badge badge-danger">No</span>
                        }
                    </td>
                    <td class="text-right">
                        <a asp-controller="Toys" asp-action="Edit" asp-route-id="@toy.Id" class="btn btn-sm btn-outline-info">Edit</a>
                        <a asp-controller="Toys" asp-action="Delete" asp-route-id="@toy.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-route-searchTerm="@Model.SearchTerm" asp-route-sortOrder="@Model.SortOrder" aria-label="Previous">
                        <span aria-hidden="true">«</span>
                    </a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-searchTerm="@Model.SearchTerm" asp-route-sortOrder="@Model.SortOrder">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-route-searchTerm="@Model.SearchTerm" asp-route-sortOrder="@Model.SortOrder" aria-label="Next">
                        <span aria-hidden="true">»</span>
                    </a>
                </li>
            }
        </ul>
    </nav>
</div>